#include "api.h"
#include "parameters.h"
#include "shake_prng.h"
#include "vector.h"

#include <stdlib.h>  // For malloc, free
#include <stdio.h>
#include <string.h>
#include <stdint.h>
#include <esp_heap_caps.h>  // For heap_caps_malloc and heap_caps_free
#include <time.h>

struct timespec start,end;

//Global deffinition so i can easily change up here
const char *sk_static = "E7DDE140798F25F18A47C033F9CCD584EEA95AA61E2698D54D49806F304715BD57D05362054E288BD46F8E7F2DA497FFC44746A4A0E5FE90762E19D60CDA5B8C9C05191BF7A630AD64FC8FD0B75A9330E9422B0D78212E8BC28994458DA698B92571C4C644336873D7AEA9F6E63BA5E8755CCCE7DD2B66CC4C0AB6B5F0166E7FA5DBC9FE03E270367FCAFF92C618FA9E0303FBD8279D38454974B29CABA4FFE2DD286E77B97A1A38D488664561EC66C67B608A0B6DFB0B9AA22D1837674269B11798A49B556A09B31D3F98CE6220A36A992B58B71B3E79208052192A3DD596B305360AA5F599A449A8F6C77EFD1538C390784A938B975BBF9B03A782E974A51E53E6B64BE24B17C88AE928F47C74BCB7FF325EBE62C0696DF9DDB1D0C0C2AB6905820156345E7BF9BD76202E875AEE68BD2663A851F814DE24A6DB48605F44E76C97D861647850ABB180639FF5885B3BF365B1A47975CDFED127BC01A7F167F883EDE25F089C39049F958CA4621517B3385065F1D8319B5AADED9DACA8E7D69CE8C1315BCCB39DCC21081D7B2A40C2FAC79B71AC5604B45F1DA118CF2E0623A444357037AFF29CE065ED9406DB4B79F259BFEBE0AAC1268A47FF9B54EC2CA8EF006B74ADF11D291501659EBBF244912A548EF603B4501BB5BDCB4FFE887E1FFF9BA9E6A264A0BE89AF9D14A5BB6888A06562B5E9C4271E4D8F8930D35B4715A846FB689DB7C229E6932018CB0A26EA4CE03DDDB6FAC5A0A7EAA404C93613F9B41B247F7F613318CE05019A8244EB86B26887910AC552D6DB53BD7F436F0E0E4F1C6A4351807A0CB91142D01A120478641960082DEFC9C3232AB30B0C0EE8F71F2EBD52B316873DF2BE9378626C4B683746AC60CF9F467A538BF7DA9B974E88199E83099D6741128C8A6285B3EA5E2AC96C7BD5ED1056B6878D359B688E239E6DB00734924A8B974987FE7AB8432697B2AA759542A72E3AEE2AFB1145613A3B21B7ADB2EE022D09AF4698EA5700544A46CE8A60C8494BC28FD2ABDD08B1593F5EA9DDC02026A003CE0EEB01855157036269241E416164D8454ED6BCFE463EDD04D4835AD5FE77854936839A5C97E09D426A7E737DBB87D99B06AF841A102E8B40CCCB42400BF119DF108DD1B7236711AC2918B67A30674519C89A5FA125978708A669502AF9C8CB2BF168D98D6DD8E5614D8389753CE011F7F9A061B251B87AFA4E28478F9FBD352619B17D6E5DEB047B618DDFCDE59C2E3C071381AFF0DD9EEB8B8EB387CFA5DDCEF0DC3C6702740F258F3008FAEDB3A6802E45878B621754F4AAE333836F6BB40AB1EE25F481B47F0046BC5A15C425EE189CFB3D059A40173936A3E16A8C1FDFEB9C08ADA1B1971015554CECEEC5504B61B495F5541625C21504AD862233AADD7E13B30D2C0FE7363DA93E4138233B1ADFAFF5B284FB032141FA29474D17403AB87B2E3ED4E66E96FBBD5643ECB013E37F60D98D96E662E516AAEB6AC794476EDDA4F00AF32D2B79EE7ABB77D10F33E0A147520DAB2042E6EBAEBA5F5F91A57D9453864D363318ADE486BE8CBB88BAD9953CE0F0B133E962BDAF93EB42FF435CD5B854ECE0380981C0F6A5A263D97AA60DBF1DE09B15F47C3869F40FCD8775E3D265F14B0DD538F0C3A185A242AEE82A357E9555ADEA21ABFC88795BC434100950D0757B58C8C751AC75A5017F5D7EFACDBAE8BE88DDF4D5F378BC64F55B68D1DB8B95B220EE788C91C9408DC42540245824A0B6874903D8D51DF867D6C0AAA92079749E68FF5D37D384139501A83D6E081C1244FCF7AD03A3998D80E94B068AD91DB39AD92C286BB05197EEF7B4D9822858540D5FA7A91640662EA65817269AEEB1DCC2284AEA9C4774193CAA7D4F84B5BBDA40B6D05FF10F9F1C3232B885282A4E27C6CFCA0D39944132A99FABD7E61D7A9605CDE6A257D5C709E923ACB893AC6D60E20FB5F2AC3C0844D66111AB9355F43049C29DE88D8B36DDE301448267CE865DA52777C5BD577D112AB5D7AB3B1B2CC76E8D74644C9FBAFEACB3D2455B05B92A16B1C66144F44158796AA7F38540B837ADEB1B4860C6FEA2C3132E96B6155367D412161CB1DA2425F11E9EE6E28776DD6940456BEF4AC8F77389867A97098F136AA216E7DEA3299A501A5BECA3F0358838F964C597A40158838276F8AB9DABC2EDC76BAEF4EE1B614CA92495E583C945301D7A33D4978FEFDD9F56ED219A8F34B0C35DBC09EFDC2C963A2F69FCBB4A132DDE857DB188305F0F20F062CA8507496E50F9AE4730534D0A7A58FB714D1FD65EA9C61752AE8B738BBA809D94B0D6E18B9F3CDF58C500B61C2CEB06D4DB43F5C516952CE251D775A38676A220C0B50FC7041091D56576CCCE8A5CD28D7BB819C2881DE584CDF6D2D8298EC9E6D42D68C954CC02F2C99A0D4782420F67B12E1C98FC1E4892EF442F98C54FB72460F03BD25FC803E186AE6272C95403A1FF269FE832D6681E9A8AE539A379D7954CECD70F56062B13B902B23F854432B92699D5B4C1D02920EA082AE3B0011A48F24EA9B54CEA0B1C5FC5210CC5B319146DD93BBAC2628FB830B9F317379672BE988EC5BAEB5E438AE71BDDB95D4F4F07EC5A63AB42EDBE2A674EC725D37FC2D7ECB3D94D8ECC5C8AAAA192EEBD250D051B06E58E4D5A53534F35BE74BBFFCB6E48122E89C9D11F6DD77AB7794FC050941191238E6C16C476E310E244E0B43F66B8DEFDAFA9B14703F6FB99D579C58D33F6E72645BA23997E1B9C52B739D544DDE894728CAFA015BE6625C6ABEBBB06B55666F7CF96F6CC66CD1E88A849B2985D641B088611F763925CDB5F616ADB39A9F816FF354A09894F1EB19D02F1068FB6571A97D90B9DE93176F767E4FC1B565484881A6795CC9FB59E09432B523EBA81D015AC4E6B805B8335CE3204D879B91FA0AB081D39E27E23F2936B75BAA4A15A8D13D6048D3E6A408F4E25F12D27F034903BDA4C2B3E01F0FB030D41338C0002799FA32FBDF34AD87DC1202F38746970D0155CD712462C232C9638D5A59C2AAD960EB62C7B2C2444DB0C3484BDDCEEDAC409D0E1B2C3A3A0B645EB2A296D1A9BD699DCE85E1F390832CA19B1D384C772214AE534DDE8E20F481A070CFADC1FE9DC90F6C8136E74C0311AC9654996D87D9A7DE39EEF35E3652FE7612B962D55C3756D892A99F688E0DF7172D5EB3E22D0B47C75696358FF922B6E6D88DE26C9047A2C73C11094A3999C03";
const char *cipher_text_string

void hexStringToByteArray(const char *hexString, uint8_t *byteArray, size_t length) {
    for (size_t i = 0; i < length; i++) {
        sscanf(hexString + 2 * i, "%2hhx", &byteArray[i]);
    }
}

// Custom task for key pair generation
TaskHandle_t keygen_decapsulationTaskHandle;

void keygen_decapsulationTask(void *pvParameters) {
    Serial.println("\nStarting Keygen with decapsulation task...");

    // Allocate memory for pk and sk on the heap
    unsigned char *sk = (unsigned char *)heap_caps_malloc(SECRET_KEY_BYTES, MALLOC_CAP_8BIT);
    unsigned char *ct = (unsigned char *)heap_caps_malloc(CIPHERTEXT_BYTES, MALLOC_CAP_8BIT);
    unsigned char *key2 = (unsigned char *)heap_caps_malloc(SHARED_SECRET_BYTES, MALLOC_CAP_8BIT);


    // Check allocation
    if (!sk) {
        Serial.println("Memory allocation failed for pk or sk!");
        heap_caps_free(sk);
        vTaskDelete(NULL);
    }

    hexStringToByteArray(sk_static, sk, SECRET_KEY_BYTES);
    hexStringToByteArray(cipher_text_string, ct, CIPHERTEXT_BYTES);

    clock_gettime(CLOCK_MONOTONIC, &start);
    crypto_kem_dec(key2, ct, sk);
    clock_gettime(CLOCK_MONOTONIC, &end);
    double time_ms = (end.tv_sec - start.tv_sec) * 1000.0 + (end.tv_nsec - start.tv_nsec) / 1000000.0;
    Serial.printf("Priemerný čas [decapsulation]: %.3f ms\n",time_ms);
    time_ms = 0.0;


    Serial.println("\n ************************************************************************* ");
    
    Serial.println("\nsecret2 (ss): ");
    for (int i = 0; i < SHARED_SECRET_BYTES; ++i) Serial.printf("%02X", key2[i]);
    
    // Cleanup
    heap_caps_free(sk);
    heap_caps_free(ct);
    heap_caps_free(key2);

    vTaskDelete(NULL); // End the task
}

void setup() {
    Serial.begin(9600);
    delay(5000); 

    xTaskCreatePinnedToCore(keygen_decapsulationTask, "keygen_decapsulationTask", 65536, NULL, 1, &keygen_decapsulationTaskHandle, 1);
}

void loop() {}
